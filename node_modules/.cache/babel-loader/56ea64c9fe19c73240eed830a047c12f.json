{"ast":null,"code":"var _jsxFileName = \"/Users/seokhwan/Desktop/project/react_exam/src/components/Patient_list.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Moment from 'react-moment';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport IconButton from '@material-ui/core/IconButton';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'personID',\n  label: '환자 ID',\n  order: 'person_id',\n  align: 'center'\n}, {\n  id: 'gender',\n  label: '성별',\n  order: 'gender',\n  align: 'center'\n}, {\n  id: 'birthDatetime',\n  label: '생년월일',\n  order: 'birth',\n  align: 'center'\n}, {\n  id: 'age',\n  label: '나이',\n  align: 'center'\n}, {\n  id: 'race',\n  label: '인종',\n  order: 'race',\n  align: 'center'\n}, {\n  id: 'ethnicity',\n  label: '민족',\n  order: 'ethnicity',\n  align: 'center'\n}, {\n  id: 'isDeath',\n  label: '사망여부',\n  order: 'death',\n  align: 'center'\n}];\n\nconst Patient_list = () => {\n  _s();\n\n  const baseurl = 'http://49.50.167.136:9871/';\n  const [plist, setPlist] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [order_column, setOrder_column] = useState('death');\n  const [order_desc, setOrder_desc] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(1);\n  };\n\n  const arrowHandler = e => {\n    setOrder_desc(!order_desc);\n\n    if (order_column !== e) {\n      setOrder_column(e);\n    }\n  };\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    axios.get(baseurl + `api/patient/list?page=${page}&order_column=${order_column}&order_desc=${order_desc}`).then(res => {\n      // console.log(res.data.patient)\n      setPlist(res.data.patient.list);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [page, order_column, order_desc]); // console.log(plist)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Patient_list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              children: [column.label, /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-controls\": \"simple-menu\",\n                \"aria-haspopup\": \"true\",\n                onClick: handleClick,\n                children: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Menu, {\n                id: \"simple-menu\",\n                anchorEl: anchorEl,\n                keepMounted: true,\n                open: Boolean(anchorEl),\n                onClose: handleClose,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: handleClose,\n                  children: \"Profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: handleClose,\n                  children: \"My account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: handleClose,\n                  children: \"Logout\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                \"aria-controls\": \"simple-menu\",\n                \"aria-haspopup\": \"true\",\n                onClick: handleClick,\n                children: \"Open Menu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Menu, {\n                id: \"simple-menu\",\n                anchorEl: anchorEl,\n                keepMounted: true,\n                open: Boolean(anchorEl),\n                onClose: handleClose,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: handleClose,\n                  children: \"Profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: handleClose,\n                  children: \"My account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: handleClose,\n                  children: \"Logout\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 7\n              }, this), column.id !== 'age' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                children: order_column === column.order && order_desc === true ? /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {\n                  onClick: () => arrowHandler(column.order)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 94\n                }, this) : /*#__PURE__*/_jsxDEV(ArrowDropUpIcon, {\n                  onClick: () => arrowHandler(column.order)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 157\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 29\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 29\n              }, this)]\n            }, column.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: plist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((patient, index) => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = patient[column.id]; // console.log(patient)\n\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: [column.id !== \"birthDatetime\" && column.id !== \"isDeath\" && value, column.id === \"birthDatetime\" && /*#__PURE__*/_jsxDEV(Moment, {\n                    format: \"YYYY-MM-DD HH:mm\",\n                    children: value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 71\n                  }, this), column.id === \"isDeath\" && value === false && /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"N\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 84\n                  }, this), column.id === \"isDeath\" && value === true && /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Y\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 83\n                  }, this)]\n                }, column.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 33\n                }, this);\n              })\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      className: \"mr-4\",\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: plist.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Patient_list, \"vl82aJoKTLIQn1KxquS54j1RFG4=\");\n\n_c = Patient_list;\nexport default Patient_list;\n\nvar _c;\n\n$RefreshReg$(_c, \"Patient_list\");","map":{"version":3,"sources":["/Users/seokhwan/Desktop/project/react_exam/src/components/Patient_list.js"],"names":["axios","React","useEffect","useState","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Moment","ArrowDropDownIcon","ArrowDropUpIcon","IconButton","FilterListIcon","Menu","MenuItem","Button","columns","id","label","order","align","Patient_list","baseurl","plist","setPlist","page","setPage","rowsPerPage","setRowsPerPage","order_column","setOrder_column","order_desc","setOrder_desc","anchorEl","setAnchorEl","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","arrowHandler","e","handleClick","currentTarget","handleClose","get","then","res","data","patient","list","catch","err","console","log","map","column","Boolean","slice","index","length"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, {useEffect, useState} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Moment from 'react-moment'\n\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport IconButton from '@material-ui/core/IconButton';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\n\nconst columns = [\n    {id: 'personID', label: '환자 ID', order:'person_id', align: 'center'},\n    {id: 'gender', label: '성별', order:'gender', align: 'center'},\n    {id: 'birthDatetime', label: '생년월일', order:'birth', align: 'center'},\n    {id: 'age', label: '나이', align: 'center'},\n    {id: 'race', label: '인종', order:'race', align: 'center'},\n    {id: 'ethnicity', label: '민족', order:'ethnicity', align: 'center'},\n    {id: 'isDeath', label: '사망여부', order:'death', align: 'center'}\n]\n\n\nconst Patient_list = () =>{\n    const baseurl = 'http://49.50.167.136:9871/'\n\n    const [plist,setPlist] = useState([]);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [order_column, setOrder_column] = useState('death');\n    const [order_desc, setOrder_desc] = useState(false)\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    }\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(1);\n    }\n\n    const arrowHandler = ((e)=>{\n        setOrder_desc(!order_desc)\n        if (order_column !== e) {\n            setOrder_column(e)\n        } \n    })\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n    setAnchorEl(null);\n    };\n\n    useEffect(()=>{\n        axios.get(baseurl+`api/patient/list?page=${page}&order_column=${order_column}&order_desc=${order_desc}`)\n        .then((res)=>{\n            // console.log(res.data.patient)\n            setPlist(res.data.patient.list)\n        }).catch((err)=>{\n            console.log(err)\n        })\n    },[page,order_column,order_desc])\n    // console.log(plist)\n\n\n    return(\n        <div>\n            <p>Patient_list</p>\n            <TableContainer >\n                    <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                        {columns.map((column) => (\n                            <TableCell\n                            key={column.id}\n                            align={column.align}\n                            >\n                            {column.label}\n                            <IconButton aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                                <FilterListIcon />\n                            </IconButton>\n                            <Menu\n                                id=\"simple-menu\"\n                                anchorEl={anchorEl}\n                                keepMounted\n                                open={Boolean(anchorEl)}\n                                onClose={handleClose}\n                            >\n                                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                                <MenuItem onClick={handleClose}>My account</MenuItem>\n                                <MenuItem onClick={handleClose}>Logout</MenuItem>\n                            </Menu>\n                            <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        Open Menu\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\n        <MenuItem onClick={handleClose}>My account</MenuItem>\n        <MenuItem onClick={handleClose}>Logout</MenuItem>\n      </Menu>\n                            \n                            {column.id !== 'age' ?\n                            <span>{(order_column === column.order && order_desc === true) ?  <ArrowDropDownIcon onClick={()=>arrowHandler(column.order)}/> :<ArrowDropUpIcon onClick={()=>arrowHandler(column.order)}/>}</span> :\n                            <span></span>}\n                            </TableCell>\n                        ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {plist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((patient, index) => {\n                    \n                        return (\n                            <TableRow hover tabIndex={-1} key={index}>\n                            {columns.map((column) => {\n                                const value = patient[column.id];\n                                // console.log(patient)\n                                return (\n                                  \n                                <TableCell key={column.id} align={column.align}>\n\n                                  {/* {column.format && typeof value === 'number' ? column.format(value) : value} */}\n                                    {column.id !== \"birthDatetime\" && column.id !== \"isDeath\" && value}\n                                    {column.id === \"birthDatetime\" && <Moment format=\"YYYY-MM-DD HH:mm\">{value}</Moment>}\n                                    {column.id === \"isDeath\" && value === false && <span>N</span>}\n                                    {column.id === \"isDeath\" && value === true && <span>Y</span>}\n                                </TableCell>  \n                                );\n                            })}\n                            </TableRow>\n                        );\n                        })}\n                    </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    className=\"mr-4\"\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={plist.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n        </div>\n    )\n}\n\nexport default Patient_list"]},"metadata":{},"sourceType":"module"}