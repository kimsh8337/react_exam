{"ast":null,"code":"var _jsxFileName = \"/Users/seokhwan/Desktop/project/react_exam/src/components/Patient_list.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Moment from 'react-moment';\nimport Modal from '@material-ui/core/Modal';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseurl = 'http://49.50.167.136:9871/';\nconst columns = [{\n  id: 'personID',\n  label: '환자 ID',\n  order: 'person_id',\n  align: 'center'\n}, {\n  id: 'gender',\n  label: '성별',\n  order: 'gender',\n  align: 'center'\n}, {\n  id: 'birthDatetime',\n  label: '생년월일',\n  order: 'birth',\n  align: 'center'\n}, {\n  id: 'age',\n  label: '나이',\n  align: 'center'\n}, {\n  id: 'race',\n  label: '인종',\n  order: 'race',\n  align: 'center'\n}, {\n  id: 'ethnicity',\n  label: '민족',\n  order: 'ethnicity',\n  align: 'center'\n}, {\n  id: 'isDeath',\n  label: '사망여부',\n  order: 'death',\n  align: 'center'\n}];\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modal_in: {\n    minWidth: '400px',\n    minHeight: '250px',\n    backgroundColor: 'white',\n    padding: '10px'\n  },\n  modal_title: {\n    textAlign: 'center',\n    fontSize: '20px',\n    fontWeight: 'bold'\n  }\n}));\n\nconst Patient_list = () => {\n  _s();\n\n  const classes = useStyles();\n  const [plist, setPlist] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [order_column, setOrder_column] = useState('death');\n  const [order_desc, setOrder_desc] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [vcount, setVcount] = useState();\n  const [clists, setClists] = useState([]);\n  const [chart_gender, setChart_gender] = useState([]);\n  const [serise, setSerise] = useState([]);\n  const options = {\n    chart: {\n      type: 'pie'\n    },\n    title: {\n      text: '성별 환자수'\n    },\n    series: [{\n      data: chart_gender\n    }]\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(1);\n  };\n\n  const arrowHandler = e => {\n    setOrder_desc(!order_desc);\n\n    if (order_column !== e) {\n      setOrder_column(e);\n    }\n  };\n\n  const openModal = id => {\n    setShowModal(true);\n    axios.get(baseurl + `api/patient/brief/${id}`).then(res => {\n      setVcount(res.data.visitCount);\n      setClists(res.data.conditionList);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const setCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const conditionlist = clists.map((clist, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"mb-1\",\n    children: clist\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 7\n  }, this));\n  useEffect(() => {\n    var f_cnt = 0;\n    var m_cnt = 0;\n    var i = 0;\n\n    for (i; i < serise.length; i++) {\n      if (serise[i].gender === 'F') {\n        f_cnt++;\n      } else if (serise[i].gender === 'M') {\n        m_cnt++;\n      }\n    }\n\n    setChart_gender([f_cnt, m_cnt]);\n  }, [serise]);\n  console.log(chart_gender);\n  useEffect(() => {\n    axios.get(baseurl + `api/patient/list?page=${page}&order_column=${order_column}&order_desc=${order_desc}`).then(res => {\n      // console.log(res.data.patient)\n      setPlist(res.data.patient.list);\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.get(baseurl + 'api/patient/stats').then(res => {\n      console.log(res.data.stats);\n      setSerise(res.data.stats);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [page, order_column, order_desc]); // console.log(plist)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Patient_list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              children: [column.label, column.id !== 'age' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                children: order_column === column.order && order_desc === true ? /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {\n                  onClick: () => arrowHandler(column.order)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 94\n                }, this) : /*#__PURE__*/_jsxDEV(ArrowDropUpIcon, {\n                  onClick: () => arrowHandler(column.order)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 157\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 29\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 29\n              }, this)]\n            }, column.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: plist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((patient, index) => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = patient[column.id]; // console.log(patient)\n\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  onClick: () => openModal(patient.personID),\n                  children: [column.id !== \"birthDatetime\" && column.id !== \"isDeath\" && value, column.id === \"birthDatetime\" && /*#__PURE__*/_jsxDEV(Moment, {\n                    format: \"YYYY-MM-DD HH:mm\",\n                    children: value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 71\n                  }, this), column.id === \"isDeath\" && value === false && /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"N\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 84\n                  }, this), column.id === \"isDeath\" && value === true && /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Y\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 83\n                  }, this)]\n                }, column.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 33\n                }, this);\n              })\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      className: \"mr-4\",\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: plist.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      className: classes.modal,\n      variant: \"outlined\",\n      open: showModal,\n      onClose: setCloseModal,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.modal_in,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Visit_Count : \", vcount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.modal_title,\n          children: \"Condition_List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 23\n        }, this), conditionlist]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Patient_list, \"tHFHigvM6j8cF7STPPieHYhUTvs=\", false, function () {\n  return [useStyles];\n});\n\n_c = Patient_list;\nexport default Patient_list;\n\nvar _c;\n\n$RefreshReg$(_c, \"Patient_list\");","map":{"version":3,"sources":["/Users/seokhwan/Desktop/project/react_exam/src/components/Patient_list.js"],"names":["axios","React","useEffect","useState","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Moment","Modal","Highcharts","HighchartsReact","ArrowDropDownIcon","ArrowDropUpIcon","baseurl","columns","id","label","order","align","useStyles","theme","modal","display","justifyContent","alignItems","modal_in","minWidth","minHeight","backgroundColor","padding","modal_title","textAlign","fontSize","fontWeight","Patient_list","classes","plist","setPlist","page","setPage","rowsPerPage","setRowsPerPage","order_column","setOrder_column","order_desc","setOrder_desc","showModal","setShowModal","vcount","setVcount","clists","setClists","chart_gender","setChart_gender","serise","setSerise","options","chart","type","title","text","series","data","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","arrowHandler","e","openModal","get","then","res","visitCount","conditionList","catch","err","console","log","setCloseModal","conditionlist","map","clist","index","f_cnt","m_cnt","i","length","gender","patient","list","stats","column","slice","personID"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Moment from 'react-moment'\nimport Modal from '@material-ui/core/Modal';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\n\nconst baseurl = 'http://49.50.167.136:9871/'\n\nconst columns = [\n    {id: 'personID', label: '환자 ID', order:'person_id', align: 'center'},\n    {id: 'gender', label: '성별', order:'gender', align: 'center'},\n    {id: 'birthDatetime', label: '생년월일', order:'birth', align: 'center'},\n    {id: 'age', label: '나이', align: 'center'},\n    {id: 'race', label: '인종', order:'race', align: 'center'},\n    {id: 'ethnicity', label: '민족', order:'ethnicity', align: 'center'},\n    {id: 'isDeath', label: '사망여부', order:'death', align: 'center'}\n]\n\nconst useStyles = makeStyles((theme) =>({\n    modal:{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n    modal_in:{\n        minWidth: '400px',\n        minHeight: '250px',\n        backgroundColor: 'white',\n        padding: '10px'\n    },\n    modal_title:{\n        textAlign:'center',\n        fontSize: '20px',\n        fontWeight: 'bold'\n    }\n}));\n\n\nconst Patient_list = () =>{\n    const classes = useStyles();\n    const [plist,setPlist] = useState([]);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [order_column, setOrder_column] = useState('death');\n    const [order_desc, setOrder_desc] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [vcount, setVcount] = useState();\n    const [clists, setClists] = useState([]);\n    const [chart_gender, setChart_gender] = useState([]);\n    const [serise, setSerise] = useState([]);\n\n    const options = {\n        chart: {\n          type: 'pie'\n        },\n        title: {\n          text: '성별 환자수'\n        },\n        series: [\n          {\n            data: chart_gender\n          }\n        ]\n      };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    }\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(1);\n    }\n\n    const arrowHandler = ((e)=>{\n        setOrder_desc(!order_desc)\n        if (order_column !== e) {\n            setOrder_column(e)\n        } \n    })\n\n    const openModal = ((id)=>{\n        setShowModal(true)\n        axios.get(baseurl+`api/patient/brief/${id}`)\n            .then((res)=>{\n                setVcount(res.data.visitCount)\n                setClists(res.data.conditionList)\n            }).catch((err)=>{\n                console.log(err)\n            })\n      })\n  \n      const setCloseModal =(()=>{\n        setShowModal(false)\n      })\n\n    const conditionlist = clists.map((clist, index)=>\n      <p className='mb-1' key={index}>\n          {clist}\n      </p>\n    )\n\n    useEffect(()=>{\n        var f_cnt = 0\n        var m_cnt = 0\n        var i = 0\n        for(i;i<serise.length;i++){\n            if (serise[i].gender==='F'){\n                f_cnt ++\n            }else if (serise[i].gender==='M'){\n                m_cnt ++\n            }\n        }\n        setChart_gender([f_cnt,m_cnt])\n    },[serise])\n    console.log(chart_gender)\n\n\n    useEffect(()=>{\n        axios.get(baseurl+`api/patient/list?page=${page}&order_column=${order_column}&order_desc=${order_desc}`)\n        .then((res)=>{\n            // console.log(res.data.patient)\n            setPlist(res.data.patient.list)\n        }).catch((err)=>{\n            console.log(err)\n        })\n\n        axios.get(baseurl+'api/patient/stats')\n        .then((res)=>{\n            console.log(res.data.stats)\n            setSerise(res.data.stats)\n        }).catch((err)=>{\n            console.log(err)\n        })\n    },[page,order_column,order_desc])\n    // console.log(plist)\n\n\n    return(\n        <div>\n            <p>Patient_list</p>\n            <TableContainer >\n                <Table stickyHeader aria-label=\"sticky table\"> \n                    <TableHead>\n                        <TableRow>\n                        {columns.map((column) => (\n                            <TableCell\n                            key={column.id}\n                            align={column.align}\n                            >\n                            {column.label}\n                            \n                            {column.id !== 'age' ?\n                            <span>{(order_column === column.order && order_desc === true) ?  <ArrowDropDownIcon onClick={()=>arrowHandler(column.order)}/> :<ArrowDropUpIcon onClick={()=>arrowHandler(column.order)}/>}</span> :\n                            <span></span>}\n                            </TableCell>\n                        ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {plist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((patient, index) => {\n                            \n                        return (\n                            <TableRow hover tabIndex={-1} key={index}>\n                            {columns.map((column) => {\n                                const value = patient[column.id];\n                                // console.log(patient)\n                                return (\n                                  \n                                <TableCell key={column.id} align={column.align} onClick={()=>openModal(patient.personID)}>\n\n                                  {/* {column.format && typeof value === 'number' ? column.format(value) : value} */}\n                                    {column.id !== \"birthDatetime\" && column.id !== \"isDeath\" && value}\n                                    {column.id === \"birthDatetime\" && <Moment format=\"YYYY-MM-DD HH:mm\">{value}</Moment>}\n                                    {column.id === \"isDeath\" && value === false && <span>N</span>}\n                                    {column.id === \"isDeath\" && value === true && <span>Y</span>}\n                                </TableCell>  \n                                );\n                            })}\n                            </TableRow>\n                        );\n                        })}\n                    </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    className=\"mr-4\"\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={plist.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n                <Modal\n                  className={classes.modal} variant=\"outlined\"\n                  open={showModal}\n                  onClose={setCloseModal}\n                  aria-labelledby=\"simple-modal-title\"\n                  aria-describedby=\"simple-modal-description\"\n                >\n                  <div className={classes.modal_in}>\n                      <div className='d-flex justify-content-end'>\n                        <small>Visit_Count : {vcount}</small>  \n                      </div>\n                      <p className={classes.modal_title}>Condition_List</p>\n                    {conditionlist}\n                  </div>\n                </Modal>\n                <HighchartsReact highcharts={Highcharts} options={options} />    \n        </div>\n    )\n}\n\nexport default Patient_list"]},"metadata":{},"sourceType":"module"}